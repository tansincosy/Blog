import type { NextPage } from "next";
import { GetStaticProps } from "next";
import Head from "next/head";
import { readdirSync, readFileSync } from "fs";
import matter from "gray-matter";
import Link from "next/link";
import { useEffect } from "react";
import {
  applyTheme,
  argbFromHex,
  themeFromSourceColor,
} from "@material/material-color-utilities/dist";
import { Button, Card, Chips, Layout } from "@/components";
import { Post } from "@/types/post";

const Home: NextPage<{ posts: Post[] }> = ({ posts }) => {
  useEffect(() => {
    const theme = themeFromSourceColor(argbFromHex("#f82506"));
    const systemDark = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    applyTheme(theme, { target: document.body, dark: systemDark });
  }, []);

  return (
    <>
      <Head>
        <title>Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <main className="container mx-auto flex flex-wrap justify-center items-stretch">
          {posts.map((post) => {
            return (
              <Card
                key={post.title}
                type="filled"
                className="flex basis-80 m-4 z-10 overflow-hidden flex-col shrink pb-5 cursor-pointer"
              >
                <Link href={`/blog/${post.pathName}`} passHref>
                  <a>
                    {post.thumbnail && (
                      <img
                        src={post.thumbnail}
                        alt={post.title}
                        className="w-full rounded-xl h-48 "
                      ></img>
                    )}
                    <div className="box-border px-6">
                      <h1 className="headline-medium text-primary mt-5">
                        {post.title}
                      </h1>
                      <h2 className="label-large text-secondary mt-2">
                        {post.abstract}
                      </h2>
                      <div className="mt-2 ">
                        {Array.isArray(post.tags) &&
                          post.tags.map((tag) => {
                            return (
                              <Chips
                                className="m-1"
                                icon="price-tag-3"
                                key={tag}
                                type="suggestion"
                              >
                                {tag}
                              </Chips>
                            );
                          })}
                      </div>
                      <Button
                        className="w-full"
                        type="elevated"
                        onClick={() => {
                          console.log("ssss");
                        }}
                      >
                        点击查看
                      </Button>
                    </div>
                  </a>
                </Link>
              </Card>
            );
          })}
        </main>
      </Layout>
      <footer>footer</footer>
    </>
  );
};

export const getStaticProps: GetStaticProps<any, any, Post[]> = async () => {
  const fileNames = readdirSync("posts");
  const posts = fileNames.map((filename) => {
    const fileContent = readFileSync(`posts/${filename}`).toString();
    let pathName = filename.replace(".md", "");
    const { data } = matter(fileContent) || {};
    return {
      title: data.title || "",
      thumbnail: data.thumbnail || "",
      abstract: data.abstract || "",
      tags: data.tags || [],
      pathName,
    };
  }) as Post[];
  return {
    props: {
      posts: posts,
    },
  };
};

export default Home;
